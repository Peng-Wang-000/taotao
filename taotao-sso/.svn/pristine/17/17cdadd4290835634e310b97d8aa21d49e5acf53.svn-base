package com.taotao.sso.service.impl;

import java.util.Date;
import java.util.List;
import java.util.UUID;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;
import org.springframework.util.DigestUtils;

import com.taotao.common.pojo.TaotaoResult;
import com.taotao.common.utils.CookieUtils;
import com.taotao.common.utils.JsonUtils;
import com.taotao.mapper.TbUserMapper;
import com.taotao.pojo.TbUser;
import com.taotao.pojo.TbUserExample;
import com.taotao.pojo.TbUserExample.Criteria;
import com.taotao.sso.dao.JedisClient;
import com.taotao.sso.service.UserService;

@Service
public class UserServiceImpl implements UserService {

	@Autowired
	private TbUserMapper userMapper;
	
	@Autowired
	private JedisClient jedisClient;
	//redis key
	@Value("${REDIS_USER_SESSION_KEY}")
	private String REDIS_USER_SESSION_KEY;
	//redis key的过期时间
	@Value("${SSO_SESSION_EXPIRE}")
	private int SSO_SESSION_EXPIRE;

	@Override
	public TaotaoResult checkData(String param, Integer type) {
		//创建查询条件
		TbUserExample example = new TbUserExample();
		Criteria criteria = example.createCriteria();
		// 判断类型可选参数1、2、3分别代表username、phone、email
		if(1==type){
			criteria.andUsernameEqualTo(param);
		}
		if(2==type){
			criteria.andPhoneEqualTo(param);
		}
		if(3==type){
			criteria.andEmailEqualTo(param);
		}
		
		List<TbUser> list = userMapper.selectByExample(example);
		if(list.size()>0&& list!=null){
			return TaotaoResult.ok(false);
		}
		return TaotaoResult.ok(true);
	}

	@Override
	public TaotaoResult createUser(TbUser user) {
		//补全信息
		user.setCreated(new Date());
		user.setUpdated(new Date());
		//对用户密码进行加密
		user.setPassword(DigestUtils.md5DigestAsHex(user.getPassword().getBytes()));
		userMapper.insert(user);
		
		return TaotaoResult.ok();
	}

	@Override
	public TaotaoResult userLogin(String username, String password,HttpServletRequest request,	HttpServletResponse response) {
		TbUserExample example = new  TbUserExample();
		Criteria criteria = example.createCriteria();
		criteria.andUsernameEqualTo(username);
		//根据用户名查询信息
		List<TbUser> list = userMapper.selectByExample(example);
		//没有此用户
		if(list.size()==0||list==null){
			return TaotaoResult.build(400, "用户名或者密码错误！");
		}
		//有此用户,但是密码错误
		TbUser user = list.get(0);
		String md5password = DigestUtils.md5DigestAsHex(password.getBytes());
		if(!user.getPassword().equals(md5password)){
			return TaotaoResult.build(400, "用户名或者密码错误！");
		}
		//获得token
		String token = UUID.randomUUID().toString();
		//保存对象时将user中的密码置空
		user.setPassword(null);
		//将用户信息以json的形式添加到缓存
		//将token存入redis缓存中
		jedisClient.set(REDIS_USER_SESSION_KEY+":"+token,JsonUtils.objectToJson(user));
		//设置session的缓存过期时间
		jedisClient.expire(REDIS_USER_SESSION_KEY+":"+token, SSO_SESSION_EXPIRE);
		//查询成功返回token
		
		//将token 写入cookie中,cookie的生存周期直到浏览器关闭
		CookieUtils.setCookie(request, response, "TT_TOKEN", token);
		
		return TaotaoResult.ok(token);
	}

	@Override
	public TaotaoResult getUserByToken(String token) {
		//根据token从redis中查询用户信息
		String json = jedisClient.get(REDIS_USER_SESSION_KEY+":"+token);
		if(StringUtils.isBlank(json)){
			//json为空表示已经过期
			return TaotaoResult.build(400, "此session已经过期，请重新登录！");
		}
		//更新用户session过期时间
		jedisClient.expire(REDIS_USER_SESSION_KEY+":"+token, SSO_SESSION_EXPIRE);
		//返回用户信息
		return TaotaoResult.ok(JsonUtils.jsonToPojo(json, TbUser.class));
	}

	@Override
	public TaotaoResult logoutByToken(String token) {
		jedisClient.del(REDIS_USER_SESSION_KEY+":"+token);
		return TaotaoResult.ok();
	}

}
